version: "3.8"

services:
  minio:
    container_name: Minio
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=supersecret
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio-create-bucket:
    image: minio/mc:latest
    container_name: minio-create-bucket
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 admin supersecret;
      mc mb myminio/mlflow --ignore-existing;
      mc anonymous set download myminio/mlflow;
      exit 0;
      "

  postgres:
    image: postgres:13
    container_name: postgres-mlflow
    restart: unless-stopped
    environment:
      POSTGRES_DB: mlflow_db
      POSTGRES_USER: mlflow_user
      POSTGRES_PASSWORD: mlflow_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_inferencia:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mlflow_user -d mlflow_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  mlflow:
    image: python:3.10-slim
    container_name: mlflow-server
    restart: unless-stopped
    ports:
      - "5008:5008"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=supersecret
    entrypoint: >
      /bin/bash -c "
      apt-get update && apt-get install -y curl &&
      pip install --no-cache-dir mlflow psycopg2-binary boto3 &&
      mlflow server
      --backend-store-uri postgresql://mlflow_user:mlflow_password@postgres:5432/mlflow_db
      --default-artifact-root s3://mlflow/
      --host 0.0.0.0
      --port 5008
      "
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-create-bucket:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5008/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 180s
  ml-training:
    build:
      context: ./ml-training
      dockerfile: Dockerfile
    container_name: ml-training
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=supersecret
    volumes:
      - ./ml-training:/app
    depends_on:
      mlflow:
        condition: service_healthy
    command: python train_model.py
  fastapi:
    image: spartron12/fastapi-ml:latest  
    build:
      context: ./fastapi
      dockerfile: Dockerfile

    container_name: fastapi-ml
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=supersecret
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_MODEL_NAME=modelo_penguins
      - MLFLOW_MODEL_STAGE=Production
    
    
    
    ########## PRUEBAS #####################

    deploy:
      resources:
        limits:
          cpus: '0.5'        
          memory: 512MB      
        reservations:
          cpus: '0.25'
          memory: 256MB


    #######################################
    
  
    
    depends_on:
      - mlflow

volumes:
  postgres_data_inferencia:




